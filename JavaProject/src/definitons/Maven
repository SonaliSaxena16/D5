
Difference in Dependency and plugin ?

Dependencies - Are responsible for downloading the 3rd party libraries and drivers which are necessary for our maven 
project. We can define dependencies in pom.xml(project object model) file under dependency tag <>.

Plugins - Contains different types of configurations on which our project runs. Ex - maven surefire plugin or 
maven compiler plugin. We can define plugins in pom.xml(project object model) file under plugins tag <>.

Steps are - how repository works on dependency
1 We mention dependencies in pom.xml
2 From pom it starts downloading them from maven Remote repository
3 And lastly, keeps them in local repository for project use

Maven build life cycle

1 Valiate -  validates if the project structure is correct. For example â€“ It checks if all the dependencies have been 
downloaded and are available in the local repository.

2 Compile - compiles the source code, converts the .java files to .class, and stores the classes in the target/classes 
folder.

3 Test - It runs unit tests for the project.

4 Package - This step packages the compiled code in a distributable format like JAR or WAR.

5 Integration - It runs the integration tests for the project.

6 Verify - It runs checks to verify that the project is valid and meets the quality standards.

7 Install- installs the packaged code to the local Maven repository.

8 Deploy - It copies the packaged code to the remote repository for sharing it with other developers.

Que What would happen if you run project as run as -> 1 maven build ?
Ans It would ask for Goals(Goals are like target what you want to do in your project ex- clean/compile or test). So you may 
mention clean and hit run button and in the console it'll mention the report of cleaning as Build Successful. Or you may
directly right click on pom.xml click maven clean. Can be done either ways.

Que What would clean cmnd do ?
Ans It'll clean the project temp files residing in target folder.

Que How to execute 2 cmnds simultaneously in mvn ?
Ans In pom.xml -> right click run as -> maven build -> goals ->(ex- if I want to clean and run the test files as well) so 
the cmnd is -> clean test -> hit run button.

Que What would install cmnd do ?
Ans It'll generate the project's/source code jar file inside target folder. Which we can share with our team members. 
No need to separately share the individual files or source code.


Que How to generate maven report ?
Ans For that testcases should not be run through testng.xml. Rather click on pom.xml -> run as maven test cmnd -> it'll 
run and generate the report in target folder. 

Que Need of surefire plugin ?
Ans So what happens sometimes is we run testcases from testng.xml file and in the console it shows 3 testcase run and
3 passed but in report it shows only 2 though it ran all 3. Reason is tescases were run by testng and report is being 
generated by pom.xml. Hence to overcome this problem we use surefire plugin which'll run all testng classes thru pom.xml rather than testng.xml. Hence clear nd complete report wud be shown.

Que What is mvn surefire plugin?
Ans Using this(pom.xml starts using testng file internally to run testcases) we can run all testng classes thru pom.xml
rather than testng.xml itself. For that we need to add maven surefire plugin in pom and under plugin we need to add 
configuration tag<> under this tag we need to mention testng.xml so that it can read all of our testcases from there.
Thn run as maven test and this time it'll run testng files from maven. 

Que Where is maven surefire report found ?
Ans inside target folder- surefire-reports-index.html

Que Types of maven repos ?
Ans Local, Remote and Central
Local - machine of a QA/Dev
Remote - Repository present on any server(usually of an organization). Whenever anything is needed from remote it is
1st downloaded to local thn used in the project.
Central - Repository available on INTERNET to download Jars and dependencies. Whenever anything is needed from remote it 
is 1st downloaded to local then used in the project.

Que What are 3 built in build life cycle ?
Ans Clean, Default & Site.
Clean - It'll clean the project temp files residing in target folder. Cmnd is mvn clean.
Default - Handles the project deployment. Cmnd is mvn install.
Site - Refers to the creation of project's documentation. Cmnd is mvn site. It'll create a site directory in target
folder to refer project's documentation. 

Que What is the cmnd used to generate a new project in maven ? 
Ans mvn archetype:generate: is used to generate a new project from an archetype, which is a template for a project. 
 

Que What is groupId, artifactId and version ?
Ans GroupId id is the unique identifier of the organization or group that created the project. Ex- com.nic etc.
    ArtifactId can be exact project's name ex- java demo project.
    Version - version of the project. Ex- 1.0.0.


Que What is Snapshot in maven ?
Ans It refers to the latest version available in the Remote Repository.

Que What is settins.xml in maven ?
Ans It contains elements that are used to define the values needed to configure maven.

Que What is pom.xml ?
Ans File with all the info regarding project and detail configuration like description of project, versioning, plugins
& dependencies etc.

Que What is super POM ?
Ans It's the parent pom all child pom would be derived from it. If we've different project referring to that super pom 
then it would be easy to access those parent level dependencies defined in super pom no need to define in every child 
pom.



