								ThreadSafe Or Synchronization
								
Be it ThreadSafe Or Synchronization have same meaning in java, where we can assume there's an Object obj1 and different
Threads t1,t2 & t3 are simultaneously working on obj1

Now t1 will perform it's operation and suppose it has given a value of 10 to obj1 at the same time t2 also working on obj1 it has
changed it's value from 10 to 20 this will lead to conflict between the values of t1 & t2 and suppose at the same time t3
also enters to work on obj1 it has also changed it to 50. Hence no thread would get the appropriate result.

Rather than working on same Object simultaneously & causing problem it should be a OneAtaTimeApproach, which we call 
Thread Safe In java or Synchronized. If t1 is working on an obj then all other threads should wait in queue, once t1 is 
completed and comes out of the process then only t2 should be able to start it's process on obj1

How to achieve Thread Safety in JAVA							

4 ways to do so -

a. Using Synchronization.
b. Using Volatile Keyword
c. Using Atomic Variable.
d. Using Final Keyword.

Thread safe means  When a thread is already working on an object and preventing another thread on working on the same object, this process is called Thread-Safety.
we can say when different threads are working on or trying to access the same 
object at the same time. 

Synchronization is the capability to control the access of multiple threads to any shared resource. 
The synchronization is necessary for reliable communication between threads.