Difference in GIT and GitHub

Git - Is in our own system. Like as soon as we start with git we do initialize a repo in our local machine
using git init. Now from here we are pushing the code to a Website which is GitHub

GitHub - Is a Website.

Git is a Version Control System, that helps to keep and track changes in the code.
It is popular, free to download, open-source(License free)
Fast and scalable(Be it any size of project big or small git can be used)
It tracks the History of code. Ex- I've started developing HELP btn today and it's taking huge time now I
thougth to develope it later sometime and as of now I want my previous code back without HELP button.
Helps in collaboration(Many people are working on the same project, suppose 2 people have made changes to 
the same file, now whose changes we should keep and whose to discard)That's collaboration and resolving 
conflicts.
Using GitHub website we can store and manage our code in a Folder structure popularly known as Repository.




1. git init at the folder location --> command creates a new Git repository. initialize a new, empty repository. Most other Git commands are not available outside of an initialized repository, so this is usually the first command you'll run in a new project.
2. Clone the repo --> git clone copied repo url + press enter
3. git restore FILENAME - It is used to undo changes made in a specific file
4. git status - We can get to know on which file changes  we've did. When changes happened(Add/Delete/Update-Modified) in case of Add it's showed in Green when modified/deleted showed in Red
5. git add FILENAME - it is used to add your file to Staging Area first 
   git add . -> to add multiple files to staging area
6. git commit -m "message" - It is used to finalise/save your changes of the local repo. As after commit if you do git status you'll find working tree is clean. Nothing to commit.
7. git push origin BRANCHNAME(LOCAL BRANCH) - It helps to push my Local Changes to Main/Remote Repo and it'll generate a PR link and now it's ready for review.
8. git pull origin BRANCHNAME - Pulls a specific branch changes either from any specified Branch or Master branch in your Local

9. git fetch - fetch all(incompleted PRs like Draft or Open) the existing Repo from Remote to Local repo 

10. git checkout BRANCHNAME - If your Local Branch already exists, you can simply use this cmd/ It is used to switch b/w Branches in Local Repo.
11. git checkout -b BRANCHNAME - When you wanted to create new Local branch and make you switch onto it. It is used to switch b/w Branches in Local Repo.
12. git branch - It'll give you the list of All the Local Branches which are present in you Local Repo.

13. git branch -d BRANCH_NAME --> In order to Delete your Local Branch. Without forcefully. Ex - No unchanged file, code merged.
14. git branch -D BRANCH_NAME - In order to Delete your Local Branch Do forcefully. Ex - When changes are in Staging area. 

15. git stash --> save your changes temporarily so that we can switch or create a new branch. Ex - You're working o a P2 ticket and suddenly asked to work on P1. In that case you can stash your changes of P2 switch branch and start working on P1.
16. git stash list - will show list of all stash with the saved index
17. git stash show stash@{Pass Index} - will show all changes have done in particualr stash 
18. git stash apply stash@{Pass Index} - will revert the changes of particular stash and saved the copy of stash
19. git stash pop stash@{Pass Index} -will revert the changes of particular stash and remove the stash from list

