CONSTRUCTOR
 
 Is to initialize the Class Object
 A Constructor name is as same that of a ClassName
 It's does not have a Return Type no static no data type
 If we give any return type to a Constructor,then Compiler would not throw any error rather it'll treat it as a Method
 Constructor can be called by using new Keyword itself by Java Complier if not defined by user explicitly
 However if you want make it Parameterised then you've to create it explicitly with the Parameters
 These can be OVERLOADED with the same name as that of a class but with different Parameters
 How to call it ? It can be immediately called as soon as we instantiates (means created Obj of the class)	
 Constructor Chaining - Is basically calling one Constructor with the help of another Constructor. 
 In the same class we do this by using This keyword & in case of Inheritance (Child Class) we call the Parent Class 
 Constructor by SUPER keyword
 
 RULES TO CREATE CONSTRUCTOR
 
Constructor name must be the same as its class name
A Constructor must have no explicit return type
A Java constructor cannot be abstract, static, final, and synchronized 

Two types of constructors 

Default constructor (no-arg constructor)
User Definer constructor : Parameterized & Non-Parameterized

Is there Constructor class in Java?
Yes. Java provides a Constructor class which can be used to get the internal information of a constructor in the class. It is found in the java.lang.reflect package.

Does constructor return any value?
Yes, it is the current class instance it returns the value provided to the Object however if no value provided then it returns 0 or null
depends on the data types of Variable we are calling. It'll return the basic value of dataTypes ex- for int it'll return 0 for String
it'll return null(You haven't used any return type yet it returns a value).

Ex - 

//Let us see another example of default constructor which displays the default values  

class Student3{  
int id;  
String name;  
//method to display the value of id and name  
void display()
{System.out.println(id+" "+name);}  
  
public static void main(String args[]){  
//creating objects  
Student3 s1=new Student3();  
Student3 s2=new Student3();  
//displaying values of the object  
s1.display();  
s2.display();  
}  
}  

Output - 

0 null
0 null